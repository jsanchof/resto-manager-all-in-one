name: Full Stack CI

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  test-backend:
    name: 🧪 Test Backend (Flask + PostgreSQL)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin1234
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: src/api

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧪 Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:admin1234@localhost:5432/restaurant_test
          FLASK_APP: src/app.py
          FLASK_ENV: test
        run: |
          pytest || echo "No tests found"
          
      - name: Setup test database
        run: |
          python -m pytest --setup-db
        env:
          DATABASE_URL: postgresql://postgres:admin1234@localhost:5432/restaurant_test
          FLASK_ENV: test
          
      - name: Run migrations
        run: |
          flask db upgrade
        env:
          DATABASE_URL: postgresql://postgres:admin1234@localhost:5432/restaurant_test
          FLASK_ENV: test

  test-frontend:
    name: 🧪 Test Frontend (React + Vite)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src/front

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install frontend dependencies
        run: npm ci

      - name: 🛠️ Build frontend
        run: npm run build

      - name: 🧪 Run frontend tests
        run: npm test || echo "No frontend tests yet"

  lint:
    name: 🧹 Lint Python Code
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src/api

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install linting tools
        run: |
          pip install flake8 black

      - name: 🔍 Run flake8
        run: flake8 .

      - name: 🧪 Run black check
        run: black --check .
